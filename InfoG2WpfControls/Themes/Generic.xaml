<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:InfoG2WpfControls">


    <!--#region Default Microsoft Brushes-->
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />
    
    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <!--#endregion Default Microsoft Brushes-->

    <!--#region MyTextBox-->

    <!--#region Brushes-->
    <!--Borda desabilitada-->
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <!-- Borda solida-->
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <!-- Borda selecionada/sob o mouse-->
    <SolidColorBrush x:Key="LightBorderBrush" Color="CornflowerBlue" />
    <!--#endregion Brushes-->

    <!--#region Data templates-->
    <!-- Template default da marca d'agua-->
    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}" Margin="5,0,0,0" Foreground="Gray" Focusable="False" />
    </DataTemplate>
    <!--#endregion Data templates-->

    <!--#region Converters-->
    <local:HeightToFontSizeConverter x:Key="HeightToFontSizeConverter"/>
    <!--#endregion Converters-->

    <!--#region MyTextBox Template-->
    <!--Template do MyTextBox (baseado no textbox fornecido pela microsoft)-->
    <Style x:Key="MyTextBox" TargetType="{x:Type local:MyTextBox}">
        <!--#region Propriedades gerais de comportamento-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
        <!--#endregion Propriedades gerais de comportamento-->

        <!--#region Templates personalizaveis-->
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <!--#endregion Templates personalizaveis-->

        <!--#region Delimitadores de tamanho-->
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="CharacterCasing" Value="Upper"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--#endregion Delimitadores de tamanho-->

        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MyTextBox}">
                    <!--#region Componentes-->
                    <Grid>                  
                        <!--Borda externa-->
                        <Border 
                            Name="Border"
                            CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius}" 
                            Padding="2"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter 
                                    Grid.Column="0"
                                    x:Name="PrefixHost"
                                    Content="{TemplateBinding Prefix}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    IsHitTestVisible="False"
                                    Margin="{TemplateBinding Padding}"/>

                                <!--ScrollViwer (default do textbox)-->
                                <ScrollViewer Grid.Column="1" Margin="2,0" x:Name="PART_ContentHost"/>

                                <!--Conteiner da marca D'agua-->
                                <ContentPresenter 
                                    Grid.Column="1"
                                    x:Name="WatermarkHost"
                                    Content="{TemplateBinding Watermark}"
                                    ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    IsHitTestVisible="False"
                                    Margin="{TemplateBinding Padding}"
                                    Visibility="Collapsed" />

                                <ContentPresenter 
                                    Grid.Column="2"
                                    x:Name="PostfixHost"
                                    Content="{TemplateBinding Postfix}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    IsHitTestVisible="False"
                                    Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <!--#endregion Componentes-->

                    <!--#region Gatilhos-->
                    <ControlTemplate.Triggers>
                        <!--Gatilhos de visual-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HaveFocusColor}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="AutoSizeFont" Value="True">
                            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource HeightToFontSizeConverter}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="PrefixHost" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PostfixHost" Value="Collapsed" />
                        </Trigger>

                        <!--Gatilhos de visual de condicao multipla-->
                        <!--Gatilho da marca d'agua-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="WatermarkHost" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                    <!--#endregion Gatilhos-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion MyTextBox Template-->

    <Style TargetType="{x:Type local:MyTextBox}" BasedOn="{StaticResource MyTextBox}" />
    <!--#endregion MyTextBox-->

    <!--#region Tile-->

    <!--#region Brushes-->
    <!-- Borda do color picker-->
    <LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0" />
        <GradientStop Color="#FF8399A9" Offset="0.375" />
        <GradientStop Color="#FF718597" Offset="0.375" />
        <GradientStop Color="#FF617584" Offset="1" />
    </LinearGradientBrush>

    <!-- Fundo do popup color picker-->
    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!--#endregion Brushes-->

    <!--#region Data Templates-->
    <!--Template default do titulo da Tile-->
    <DataTemplate x:Key="DefaultTileLabelTemplate">
        <TextBlock Text="{Binding}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Tile}}, Path=Foreground}" Focusable="False" TextWrapping="Wrap"/>
    </DataTemplate>

    <!--Template do icone mostrado na tile-->
    <DataTemplate x:Key="TileIconTemplate">
        <Image Source="{Binding}" Focusable="False"/>
    </DataTemplate>
    <!--#endregion Data Templates-->
    
    <!--#region Tile Template-->
    <Style x:Key="Tile" TargetType="{x:Type local:Tile}">
        <!--#region Propriedades gerais de comportamento-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--#endregion Propriedades gerais de comportamento-->

        <!--#region Templates personalizaveis-->
        <Setter Property="LabelTemplate" Value="{StaticResource DefaultTileLabelTemplate}" />
        <!--#endregion Templates personalizaveis-->

        <!--#region Delimitadores de tamanho-->
        <Setter Property="MinHeight" Value="125"/>
        <Setter Property="MinWidth" Value="125"/>
        <Setter Property="MaxHeight" Value="125"/>
        <Setter Property="MaxWidth" Value="125"/>
        <!--#endregion Delimitadores de tamanho-->

        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Tile}">
                    <!--#region Componentes-->
                    <Grid>
                        <!--Borda principal (com a cor de fundo)-->
                        <Border 
                          x:Name="Border"  
                          CornerRadius="0"
                          BorderThickness="3"
                          Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                          BorderBrush="Transparent">
                        </Border>
                        <!--Borda delimitadora preta-->
                        <Border BorderThickness="1" Margin="3,3,3,3" BorderBrush="Black" CornerRadius="0" Opacity="0.3"/>
                        <!--Borda para escurecer o contorno-->
                        <Border x:Name="TileBorder" Margin="1,1,1,1" Opacity="0" BorderThickness="3" BorderBrush="Black" CornerRadius="0" />
                        <!--Borda para mudar o visual com o mouse sobre a tile-->
                        <Border x:Name="MouseOverVisual" Margin="1,1,1,1" Opacity="0" BorderThickness="2" BorderBrush="Transparent" Background="#2FFFFFFF" CornerRadius="0" />
                        
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <!--Conteiner do titulo da tile-->
                            <TextBlock x:Name="UpLabelHost"
                                    Grid.Row="0"          
                                    Margin="5"
                                    Text="{TemplateBinding UpLabel}"
                                    Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Tile}}, Path=Foreground}"
                                    TextAlignment="Right"   
                                    Focusable="False" 
                                    TextWrapping="Wrap"   
                                    HorizontalAlignment="Right"
                                    IsHitTestVisible="False"/>
                            
                            <!--Container do Icone-->
                            <ContentPresenter x:Name="IconHost"
                                    Grid.Row="1"          
                                    Margin="0"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{StaticResource TileIconTemplate}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    IsHitTestVisible="False"
                                    RecognizesAccessKey="True"/>

                            <!--Conteiner do titulo da tile-->
                            <ContentPresenter x:Name="LabelHost"
                                    Grid.Row="2"          
                                    Margin="10,5"
                                    Content="{TemplateBinding Label}"
                                    ContentTemplate="{TemplateBinding LabelTemplate}"
                                    HorizontalAlignment="{TemplateBinding LabelAlignment}"
                                    IsHitTestVisible="False"
                                    RecognizesAccessKey="True"/>

                        </Grid>
                    </Grid>
                    <!--#endregion Componentes-->

                    <!--#region Gatilhos-->
                    <ControlTemplate.Triggers>
                        <!-- Gatilhos de visual-->
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                            <Setter TargetName="TileBorder" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="MouseOverVisual" Property="Opacity" Value="1" />
                            <Setter TargetName="TileBorder" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                            <Setter TargetName="TileBorder" Property="Opacity" Value="0.5" />
                            <Setter TargetName="MouseOverVisual" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--#endregion Gatilhos-->                  
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion Tile Template-->

    <Style TargetType="{x:Type local:Tile}" BasedOn="{StaticResource Tile}" />
    <!--#endregion Tile-->

    <!--#region MyDataGrid-->
    <!-- Persoanalizacao do estilo do DataGrid (Usando o Template padrao)-->
    <Style TargetType="{x:Type local:MyDataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <!--#region Propriedades gerais de comportamento-->
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <!--#endregion Propriedades gerais de comportamento-->

        <!--#region Delimitadores de tamanho-->
        <Setter Property="MinHeight" Value="125"/>
        <Setter Property="MinWidth" Value="125"/>
        <Setter Property="FontSize" Value="14"/>
        <!--#endregion Delimitadores de tamanho-->
    </Style>
    <!--#endregion MyDataGrid-->

    <!--#region Tile2-->
    <!--#region Data Templates-->
    <!--Template default do titulo da Tile-->
    <DataTemplate x:Key="DefaultTile2LabelTemplate">
        <TextBlock Text="{Binding}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Tile2}}, Path=Foreground}" Focusable="False" TextWrapping="Wrap"/>
    </DataTemplate>

    <!--Template default do titulo da Tile-->
    <DataTemplate x:Key="DefaultTile2ContentTemplate">
        <TextBlock Text="{Binding}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Tile2}}, Path=Foreground}" Focusable="False" TextWrapping="Wrap"/>
    </DataTemplate>

    <!--Template do icone mostrado na tile-->
    <DataTemplate x:Key="Tile2IconTemplate">
        <Image Source="{Binding}" Focusable="False" Width="70" Height="70"/>
    </DataTemplate>
    <!--#endregion Data Templates-->

    <!--#region Tile Template-->
    <Style x:Key="Tile2" TargetType="{x:Type local:Tile2}">
        <!--#region Propriedades gerais de comportamento-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--#endregion Propriedades gerais de comportamento-->

        <!--#region Templates personalizaveis-->
        <Setter Property="LabelTemplate" Value="{StaticResource DefaultTile2LabelTemplate}" />
        <!--#endregion Templates personalizaveis-->

        <!--#region Delimitadores de tamanho-->
        <Setter Property="MinHeight" Value="125"/>
        <Setter Property="MinWidth" Value="250"/>
        <Setter Property="MaxHeight" Value="125"/>
        <Setter Property="MaxWidth" Value="250"/>
        <!--#endregion Delimitadores de tamanho-->

        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Tile2}">
                    <!--#region Componentes-->
                    <Grid>
                        <!--Borda principal (com a cor de fundo)-->
                        <Border 
                                x:Name="Border"  
                                CornerRadius="0"
                                BorderThickness="3"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                BorderBrush="Transparent">
                        </Border>
                        <!--Borda delimitadora preta-->
                        <Border BorderThickness="1" Margin="3,3,3,3" BorderBrush="Black" CornerRadius="0" Opacity="0.3"/>
                        <!--Borda para escurecer o contorno-->
                        <Border x:Name="TileBorder" Margin="1,1,1,1" Opacity="0" BorderThickness="3" BorderBrush="Black" CornerRadius="0" />
                        <!--Borda para mudar o visual com o mouse sobre a tile-->
                        <Border x:Name="MouseOverVisual" Margin="1,1,1,1" Opacity="0" BorderThickness="2" BorderBrush="Transparent" Background="#2FFFFFFF" CornerRadius="0" />

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="90"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <!--Container do Icone-->
                                <ContentPresenter 
                                        Grid.Column="0"
                                        x:Name="IconHost"
                                        Margin="5,10,0,0"
                                        Content="{TemplateBinding Icon}"
                                        ContentTemplate="{StaticResource Tile2IconTemplate}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Center"
                                        IsHitTestVisible="False"
                                        RecognizesAccessKey="True"/>

                                <ContentPresenter 
                                        Grid.Column="1"
                                        x:Name="ContentHost"
                                        Margin="5,10,10,0"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{StaticResource DefaultTile2ContentTemplate}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        IsHitTestVisible="False"
                                        RecognizesAccessKey="True"/>
                            </Grid>

                            <!--Conteiner do titulo da tile-->
                            <ContentPresenter
                                    Grid.Row="1"
                                    x:Name="LabelHost"
                                    Margin="10,5,10,5"
                                    Content="{TemplateBinding Label}"
                                    ContentTemplate="{TemplateBinding LabelTemplate}"
                                    VerticalAlignment="Bottom"
                                    HorizontalAlignment="{TemplateBinding LabelAlignment}"
                                    IsHitTestVisible="False"
                                    RecognizesAccessKey="True"/>
                        </Grid>
                    </Grid>
                    <!--#endregion Componentes-->

                    <!--#region Gatilhos-->
                    <ControlTemplate.Triggers>
                        <!-- Gatilhos de visual-->
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                            <Setter TargetName="TileBorder" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="MouseOverVisual" Property="Opacity" Value="1" />
                            <Setter TargetName="TileBorder" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                            <Setter TargetName="TileBorder" Property="Opacity" Value="0.5" />
                            <Setter TargetName="MouseOverVisual" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--#endregion Gatilhos-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion Tile Template-->

    <Style TargetType="{x:Type local:Tile2}" BasedOn="{StaticResource Tile2}" />
    <!--#endregion Tile2-->
    
    <!--#region MyButton-->
    <!--#region MyButton Template-->
    <Style x:Key="MyButton" TargetType="{x:Type local:MyButton}">
        <!--#region Propriedades Gerais de Comportamento-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <!--#endregion Propriedades Gerais de Comportamento-->

        <!--#region Propriedades-->
        <Setter Property="Background" Value="#D0D0D0"/>
        <Setter Property="BorderBrush" Value="#CBCBCB"/>
        <!--#endregion Propriedades-->

        <!--#region Delimitadores de tamanho-->
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <!--#endregion Delimitadores de tamanho-->

        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MyButton}">
                    <!--#region Componentes-->
                    <Border 
                          x:Name="Border"  
                          CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius}" 
                          BorderThickness="1"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" Width="Auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <!--Container do Icone-->
                            <Image x:Name="IconHost" Grid.Column="0" Margin="2" Source="{TemplateBinding Icon}" Focusable="False" Width="{TemplateBinding IconSize}"/>

                            <ContentPresenter Grid.Column="1" Margin="2,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                            <TextBlock Grid.Column="1" Margin="2,0" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Text}"/>
                        </Grid>
                    </Border>
                    <!--#endregion Componentes-->

                    <!--#region Gatilhos-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconHost" Property="Margin" Value="0.0"/>
                            <Setter TargetName="IconHost" Property="Width" Value="0.0"/>
                            <Setter Property="IconSize" Value="0.0"/>
                        </Trigger>
                        <Trigger Property="IconSize" Value="-1.0">
                            <Setter TargetName="IconHost" Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"/>
                        </Trigger>
                        <Trigger Property="Borderless" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--#endregion Gatilhos-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion MyButton Template-->
    
    <Style TargetType="{x:Type local:MyButton}" BasedOn="{StaticResource MyButton}"/>
    <!--#endregion MyButton-->

    <!--#region MyImageButton-->
    <!--#region Styles-->
    <Style x:Key="ImageButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle 
                            Margin="2"
                            StrokeThickness="1"
                            Stroke="#60000000"
                            StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Styles-->
    
    <!--#region MyImageButton Template-->
    <Style TargetType="{x:Type local:MyImageButton}">
        <!--#region Propriedades Gerais de Comportamento-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <!--#endregion Propriedades Gerais de Comportamento-->

        <!--#region Delimitadores de tamanho-->
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Padding" Value="2"/>
        <!--#endregion Delimitadores de tamanho-->

        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MyImageButton}">
                    <!--#region Componentes-->
                    <Grid>
                        <Border 
                          x:Name="Border"  
                          CornerRadius="2" 
                          BorderThickness="1"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <!--Container do Icone-->
                                <Image x:Name="IconHost" Grid.Row="0" Margin="{TemplateBinding Padding}" Source="{TemplateBinding Icon}" Focusable="False"/>

                                <ContentPresenter x:Name="ContentHost" Grid.Row="1" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>

                        <Border x:Name="Overlay" BorderBrush="Transparent" Background="Transparent"/>

                    </Grid>
                    
                    
                    <!--#endregion Componentes-->

                    <!--#region Gatilhos-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Overlay" Property="Background" Value="#1FFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Overlay" Property="Background" Value="#1FFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Background" Value="#2FFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Background" Value="#2F000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--#endregion Gatilhos-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion MyImageButton Template-->
    <!--#endregion MyImageButton-->
    
    <!--#region MyComboBox-->
    <!--#region Component Templates-->
    <!--#region Toogle Button-->
    <ControlTemplate x:Key="MyComboBoxToggleButton" TargetType="{x:Type local:MyToggleButton}">
        <!--#region Components-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="Transparent"
                  BorderBrush="{DynamicResource SolidBorderBrush}"
                  BorderThickness="1" />
            <Border 
                  x:Name="Border" 
                  Grid.Column="1"
                  CornerRadius="2,0,0,2" 
                  Margin="1" 
                  Background="{TemplateBinding Background}" 
                  BorderBrush="{DynamicResource SolidBorderBrush}"
                  BorderThickness="1,0,0,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="#444"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <!--#endregion Components-->

        <!--#region Gatilhos-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <!--#endregion Gatilhos-->
    </ControlTemplate>
    <!--#endregion Toogle Button-->

    <!--#region TextBox-->
    <ControlTemplate x:Key="MyComboBoxTextBox" TargetType="{x:Type local:MyTextBox}">
        <Border x:Name="PART_ContentHost" Focusable="True" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <!--#endregion TextBox-->
    <!--#endregion Component Templates-->
    
    <!--#region MyComboBox Template-->
    <Style x:Key="{x:Type local:MyComboBox}" TargetType="{x:Type local:MyComboBox}">
        <!--#region Propriedades gerais de comportamento-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--#endregion Propriedades gerais de comportamento-->

        <!--#region Delimitadores de tamanho-->
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="FontSize" Value="12"/>
        <!--#endregion Delimitadores de tamanho-->

        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MyComboBox}">
                    <!--#region Componentes-->
                    <Border x:Name="BG" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="3">
                        <Grid>

                            <!--#region Toggle-->
                            <local:MyToggleButton Name="ToggleButton" Focusable="false" ClickMode="Press"
                                                  Template="{StaticResource MyComboBoxToggleButton}" 
                                                  Background="{TemplateBinding ButtonBrush}"
                                                  MouseOverBrush="{TemplateBinding ButtonMouseOverBrush}"
                                                  PressedBrush="{TemplateBinding ButtonPressedBrush}"
                                                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <!--#endregion Toggle-->

                            <!--#region Visor-->
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" 
                                              Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <!--#endregion Visor-->

                            <!--#region Entrada de Texto-->
                            <local:MyTextBox x:Name="PART_EditableTextBox" Focusable="True"
                                             Margin="3,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                             Style="{x:Null}" Background="Transparent" Visibility="Hidden"
                                             Template="{StaticResource MyComboBoxTextBox}" 
                                             HaveFocusColor="{TemplateBinding HaveFocusColor}"             
                                             IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <!--#endregion Entrada de Texto-->

                            <!--#region Lista-->
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                
                                <Grid Name="DropDown" SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    
                                    <Border x:Name="DropDownBorder" BorderThickness="1"
                                            Background="{TemplateBinding ListBackground}"
                                            BorderBrush="{DynamicResource SolidBorderBrush}"/>
                                    
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                            <!--#endregion Lista-->
                        </Grid>
                    </Border>
                    <!--#endregion Componentes-->
                    
                    <!--#region Gatilhos-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BG" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HaveFocusColor}"/>
                            <Setter TargetName="BG" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BG" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            <Setter TargetName="BG" Property="BorderBrush" Value="{DynamicResource DisableBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="AutoSizeFont" Value="True">
                            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource HeightToFontSizeConverter}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--#endregion Gatilhos-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion MyComboBox Template-->
    <!--#endregion MyComboBox-->

    <!--#region MyDataPicker-->  
    <!--#region Component Templates-->
    <!--#region Toogle Button-->
    <ControlTemplate x:Key="MyDatePickerToggleButton" TargetType="{x:Type local:MyButton}">
        <!--#region Components-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border 
                  x:Name="Border" 
                  Grid.Column="0"
                  CornerRadius="2,0,0,2" 
                  Margin="0" 
                  Background="{TemplateBinding Background}" 
                  BorderBrush="{DynamicResource SolidBorderBrush}"
                  BorderThickness="1,0,0,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="0"     
                  Fill="#444"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <!--#endregion Components-->

        <!--#region Gatilhos-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <!--#endregion Gatilhos-->
    </ControlTemplate>
    <!--#endregion Toogle Button-->
    <!--#endregion Component Templates-->
    
    <!--#region MyDatePicker Template-->
    <Style TargetType="{x:Type local:MyDatePicker}">
        <!--#region Propriedades gerais de comportamento-->
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--#endregion Propriedades gerais de comportamento-->

        <!--#region Propriedades gerais-->
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="SelectedDate" Value="{x:Static sys:DateTime.Now}" />
        <Setter Property="CalendarStyle" Value="{StaticResource {x:Type Calendar}}" />
        <!--#endregion Propriedades gerais-->
        
        <!--#region Delimitadores de tamanho-->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="MinWidth" Value="95" />
        <Setter Property="Height" Value="Auto" />
        <!--#endregion Delimitadores de tamanho-->

        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MyDatePicker}">
                    <!--#region Componentes-->
                    <Border x:Name="Border"
                            Padding="0"
                            VerticalAlignment="Stretch"
                            BorderBrush="{DynamicResource SolidBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius}">
                       
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root">
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            
                            <local:MyButton x:Name="PART_Button"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                Focusable="False"
                                HorizontalAlignment="Left"
                                Margin="0"
                                Grid.Row="0"
                                Template="{StaticResource MyDatePickerToggleButton}"
                                VerticalAlignment="Stretch" />
                            
                            <DatePickerTextBox x:Name="PART_TextBox"
                               Grid.Column="0"
                               Margin="2,0"                
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalContentAlignment="Stretch"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                               Foreground="{TemplateBinding Foreground}"
                               Focusable="{TemplateBinding Focusable}"   
                               BorderBrush="Transparent"
                               Background="Transparent">
                                
                            </DatePickerTextBox>
                            
                            <Grid x:Name="PART_DisabledVisual"
                                  Grid.ColumnSpan="2"
                                  Grid.Column="0"
                                  IsHitTestVisible="False"
                                  Opacity="0"
                                  Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0"
                                     Fill="Transparent"
                                     RadiusY="1"
                                     Grid.Row="0"
                                     RadiusX="1" />
                                <Rectangle Grid.Column="1"
                                     Fill="Transparent"
                                     Height="18"
                                     Margin="3,0,3,0"
                                     RadiusY="1"
                                     Grid.Row="0"
                                     RadiusX="1"
                                     Width="19" />
                                <Popup x:Name="PART_Popup"
                                     AllowsTransparency="True"
                                     Placement="Bottom"
                                     PlacementTarget="{Binding ElementName=PART_TextBox}"
                                     StaysOpen="False" />
                            </Grid>
                        </Grid>
                    </Border>
                    <!--#endregion Componentes-->
                    
                    <!--#region Gatilhos-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HaveFocusColor}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="PART_TextBox" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HaveFocusColor}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="AutoSizeFont" Value="True">
                            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource HeightToFontSizeConverter}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--#endregion Gatilhos-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion MyDatePicker Template-->
    <!--#endregion MyDataPicker-->

    <!--#region MyToggleButton-->
    <Style x:Key="MyToggleButton" TargetType="{x:Type local:MyToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:MyToggleButton}" BasedOn="{StaticResource MyToggleButton}" />
    <!--#endregion MyToggleButton-->

    <!--#region Header-->
    <Style TargetType="{x:Type local:Header}">
        <!--#region Propriedades Gerais de Comportamento-->
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <!--#endregion Propriedades Gerais de Comportamento-->

        <!--#region Delimitadores de Tamanho-->
        <Setter Property="Padding" Value="0,2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="5,2,5,3"/>
        <!--#endregion Delimitadores de Tamanho-->
        
        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Header}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HeaderAlignment}">
                            <Label Padding="{TemplateBinding Padding}"
                               FontFamily="{TemplateBinding FontFamily}"  
                               FontSize="{TemplateBinding FontSize}" 
                               FontStyle="{TemplateBinding FontStyle}"
                               FontStretch="{TemplateBinding FontStretch}"
                               FontWeight="{TemplateBinding FontWeight}"
                               Foreground="{TemplateBinding Foreground}"
                               Content="{TemplateBinding Text}"/>

                            <ContentPresenter Content="{TemplateBinding Appendix}"/>
                        </StackPanel>

                        <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" Margin="0">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion Header-->

    <!--#region StickyNote-->

    <!--#region Converters-->
    <local:BooleanInverter x:Key="BoolInverter" />
    <!--#endregion Converters-->
    
    <Style TargetType="{x:Type local:StickyNote}">
        <!--#region Propriedades Gerais-->
        <Setter Property="Background" Value="LightYellow"/>
        <Setter Property="Foreground" Value="Black"/>
        <!--#endregion Propriedades Gerais-->

        <!--#region Delimitadores de Tamanho-->
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Margin" Value="5"/>
        <!--#endregion Delimitadores de Tamanho-->
        
        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StickyNote}">
                    <Border Background="Transparent" BorderBrush="#80000000" BorderThickness="1">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <!--#region Note Header-->
                                <Grid Grid.Row="0" Background="#20000000">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <Canvas Grid.Column="0" Margin="2" Width="16" Height="16" Background="#10000000">
                                        <Canvas.ToolTip>
                                            <ToolTip Content="{TemplateBinding DateCreated}" ContentStringFormat="dd/MM/yyyy - HH:mm"/>
                                        </Canvas.ToolTip>
                                        <Ellipse Width="16" Height="16" Stroke="Black"/>
                                        <Path Fill="Black" Data="M 7 4 L 7 9 L 13 9 L 13 7 L 9 7 L 9 4"/>
                                    </Canvas>
                                    

                                    <TextBox Grid.Column="1" Margin="5,2"
                                         BorderBrush="Transparent"
                                         VerticalAlignment="Stretch"
                                         HorizontalAlignment="Stretch"
                                         FocusVisualStyle="{x:Null}"
                                         AcceptsReturn="True"
                                         Background="Transparent"
                                         Foreground="{TemplateBinding Foreground}" 
                                         FontSize="{TemplateBinding FontSize}" 
                                         FontFamily="{TemplateBinding FontFamily}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         TextWrapping="Wrap" 
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path= Header}"/>
                                </Grid>
                                <!--#endregion Note Header-->

                                <!--#region Note Body-->
                                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                    <TextBox Margin="5"
                                         BorderBrush="Transparent"
                                         VerticalAlignment="Stretch"
                                         HorizontalAlignment="Stretch"
                                         FocusVisualStyle="{x:Null}"
                                         AcceptsReturn="True"
                                         Background="{TemplateBinding Background}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Foreground="{TemplateBinding Foreground}" 
                                         FontSize="{TemplateBinding FontSize}" 
                                         FontFamily="{TemplateBinding FontFamily}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         TextWrapping="{TemplateBinding TextWrapping}" 
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path= Text}"/>
                                </ScrollViewer>
                                <!--#endregion Note Body-->

                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>
    <!--#endregion StickyNote-->

    <!--#region NumericUpDown-->

    <!--#region Component Templates-->
    <!--#region Button Up-->
    <ControlTemplate x:Key="ButtonUP" TargetType="{x:Type local:MyButton}">
        <!--#region Components-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border 
                  x:Name="Border" 
                  Grid.Column="0"
                  CornerRadius="0,2,0,0" 
                  Margin="0" 
                  Background="{TemplateBinding Background}" 
                  BorderBrush="{DynamicResource SolidBorderBrush}"
                  BorderThickness="0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="0"     
                  Fill="#444"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 4 L 4 0 L 8 4 Z"/>
        </Grid>
        <!--#endregion Components-->

        <!--#region Gatilhos-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <!--#endregion Gatilhos-->
    </ControlTemplate>
    <!--#endregion Button Up-->

    <!--#region Button Down-->
    <ControlTemplate x:Key="ButtonDown" TargetType="{x:Type local:MyButton}">
        <!--#region Components-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border 
                  x:Name="Border" 
                  Grid.Column="0"
                  CornerRadius="0,0,2,0" 
                  Margin="0" 
                  Background="{TemplateBinding Background}" 
                  BorderBrush="{DynamicResource SolidBorderBrush}"
                  BorderThickness="0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="0"     
                  Fill="#444"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <!--#endregion Components-->

        <!--#region Gatilhos-->
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <!--#endregion Gatilhos-->
    </ControlTemplate>
    <!--#endregion Button Down-->
    <!--#endregion Component Templates-->

    <Style x:Key="NumberSpinner" TargetType="{x:Type local:NumberSpinner}">
        
        <!--#region Propriedades Gerais-->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--#endregion Propriedades Gerais-->

        <!--#region Delimitadores de tamanho-->
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="FontSize" Value="12"/>
        <!--#endregion Delimitadores de tamanho-->

        <!--#region Control Template-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumberSpinner}">
                    
                    <!--#region Componentes-->
                    <Border x:Name="BG" Background="{TemplateBinding Background}"
                            CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius}" 
                            Padding="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!--#region Entrada de Texto-->
                            <local:MyTextBox x:Name="PART_TextBox" Grid.Row="0"
                                                Style="{x:Null}" 
                                                Template="{StaticResource MyComboBoxTextBox}" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center"
                                                Focusable="True" 
                                                Mask="Integer"
                                                AutoSelect="True"
                                                MaxLength="16"
                                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"
                                                Background="Transparent"
                                                HaveFocusColor="{TemplateBinding HaveFocusColor}"             
                                                IsReadOnly="{TemplateBinding IsReadOnly}">
                            </local:MyTextBox>
                            <!--#endregion Entrada de Texto-->

                            <!--#region Botões-->
                            <Grid Grid.Column="1" Margin="2,-2,-2,-2">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <local:MyButton Grid.Row="0" 
                                                Focusable="False" 
                                                Foreground="{TemplateBinding Foreground}" 
                                                Background="{TemplateBinding ButtonColor}" 
                                                Template="{StaticResource ButtonUP}"
                                                Command="{TemplateBinding UpDownManager}"
                                                CommandParameter="UP"/>
                                
                                <local:MyButton Grid.Row="1" 
                                                Focusable="False" 
                                                Foreground="{TemplateBinding Foreground}" 
                                                Background="{TemplateBinding ButtonColor}" 
                                                Template="{StaticResource ButtonDown}"
                                                Command="{TemplateBinding UpDownManager}"
                                                CommandParameter="DOWN"/>
                            </Grid>
                            <!--#endregion Botões-->

                        </Grid>
                    </Border>
                    <!--#endregion Componentes-->

                    <!--#region Gatilhos-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BG" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HaveFocusColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="FloatMode" Value="true">
                            <Setter TargetName="PART_TextBox" Property="Mask" Value="Decimal"/>
                        </Trigger>
                        <Trigger Property="AutoSizeFont" Value="True">
                            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource HeightToFontSizeConverter}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--#endregion Gatilhos-->
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--#endregion Control Template-->
    </Style>

    <Style TargetType="{x:Type local:NumberSpinner}" BasedOn="{StaticResource NumberSpinner}" />
    <!--#endregion NumericUpDown-->

</ResourceDictionary>
